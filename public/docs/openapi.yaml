openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /sanctum/csrf-cookie:
    get:
      summary: 'Return an empty response simply to trigger the storage of the CSRF cookie in the browser.'
      operationId: returnAnEmptyResponseSimplyToTriggerTheStorageOfTheCSRFCookieInTheBrowser
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Endpoints
      security: []
  /_ignition/health-check:
    get:
      summary: ''
      operationId: get_ignitionHealthCheck
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  can_execute_commands: true
                properties:
                  can_execute_commands:
                    type: boolean
                    example: true
      tags:
        - Endpoints
      security: []
  /_ignition/execute-solution:
    post:
      summary: ''
      operationId: post_ignitionExecuteSolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solution:
                  type: string
                  description: ''
                  example: dignissimos
                parameters:
                  type: object
                  description: ''
                  example: null
                  properties: {  }
              required:
                - solution
      security: []
  /_ignition/update-config:
    post:
      summary: ''
      operationId: post_ignitionUpdateConfig
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: light
                  enum:
                    - light
                    - dark
                    - auto
                editor:
                  type: string
                  description: ''
                  example: quisquam
                hide_solutions:
                  type: boolean
                  description: ''
                  example: false
              required:
                - theme
                - editor
                - hide_solutions
      security: []
  /:
    get:
      summary: ''
      operationId: get
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'hello, please visit /docs for documentation'
                  docs: 'http://localhost:8000/docs'
                properties:
                  message:
                    type: string
                    example: 'hello, please visit /docs for documentation'
                  docs:
                    type: string
                    example: 'http://localhost:8000/docs'
      tags:
        - Endpoints
      security: []
  /auth/login:
    post:
      summary: 'Login endpoint'
      operationId: loginEndpoint
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: password123
                nip:
                  type: string
                  description: ''
                  example: '2121021210'
              required:
                - password
                - nip
      security: []
  /auth/logout:
    post:
      summary: ''
      operationId: postAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /admin/dashboard/counts:
    get:
      summary: ''
      operationId: getAdminDashboardCounts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
  /admin/dashboard/stats/request:
    get:
      summary: ''
      operationId: getAdminDashboardStatsRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
  /admin/dashboard/stats/item:
    get:
      summary: ''
      operationId: getAdminDashboardStatsItem
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
  /category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
              required:
                - name
      security: []
  '/category/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: illum
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /item:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rd
                merk:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lhbelkxvtmbb
                unit:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hlageesholj
                stock:
                  type: integer
                  description: satuan.
                  example: 6
                min_stock:
                  type: integer
                  description: ''
                  example: 19
                category_id:
                  type: integer
                  description: ''
                  example: 16
                price:
                  type: integer
                  description: ''
                  example: 20
              required:
                - name
                - merk
                - unit
                - stock
                - min_stock
                - category_id
                - price
      security: []
  '/item/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Authorized'
                properties:
                  message:
                    type: string
                    example: 'Not Authorized'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: scxko
                merk:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xmnzknsnrt
                unit:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qjueucw
                stock:
                  type: integer
                  description: satuan.
                  example: 6
                min_stock:
                  type: integer
                  description: ''
                  example: 9
                category_id:
                  type: integer
                  description: ''
                  example: 8
                price:
                  type: integer
                  description: ''
                  example: 16
              required:
                - name
                - merk
                - unit
                - stock
                - min_stock
                - category_id
                - price
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: 1
        required: true
        schema:
          type: integer
  /up:
    get:
      summary: ''
      operationId: getUp
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Laravel</title>\n\n        <!-- Fonts -->\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,600&display=swap\" rel=\"stylesheet\" />\n\n        <!-- Styles -->\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n\n        <script>\n            tailwind.config = {\n                theme: {\n                    extend: {\n                        fontFamily: {\n                            sans: ['Figtree', 'ui-sans-serif', 'system-ui', 'sans-serif', \"Apple Color Emoji\", \"Segoe UI Emoji\"],\n                        }\n                    }\n                }\n            }\n        </script>\n    </head>\n    <body class=\"antialiased\">\n        <div class=\"relative sm:flex sm:justify-center sm:items-center min-h-screen bg-gray-100 selection:bg-red-500 selection:text-white\">\n            <div class=\"w-full sm:w-3/4 xl:w-1/2 mx-auto p-6\">\n                <div class=\"px-6 py-4 bg-white from-gray-700/50 via-transparent rounded-lg shadow-2xl shadow-gray-500/20 flex items-center focus:outline focus:outline-2 focus:outline-red-500\">\n                    <div class=\"relative flex h-3 w-3\">\n                      <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\"></span>\n                      <span class=\"relative inline-flex rounded-full h-3 w-3 bg-green-400\"></span>\n                    </div>\n\n                    <div class=\"ml-6\">\n                        <h2 class=\"text-xl font-semibold text-gray-900\">Application up</h2>\n\n                        <p class=\"mt-2 text-gray-500 dark:text-gray-400 text-sm leading-relaxed\">\n                            HTTP request received.\n\n                                                            Response successfully rendered in 718ms.\n                                                    </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n"
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
